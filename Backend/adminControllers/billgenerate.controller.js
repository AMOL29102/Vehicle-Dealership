const { S3Client, PutObjectCommand, GetObjectCommand } = require("@aws-sdk/client-s3");
const { format } = require('date-fns');
const pdf = require('html-pdf');
const handlebars = require('handlebars');
const db = require("../models/database.js");  // Assuming you have a file to handle DB connections

async function generateBill(req, res) {
    const { registerNumber } = req.body;
    console.log("Request body:", req.body);

    try {
        // Query car details
        const carDetailsQuery = `SELECT * FROM cardetails WHERE registernumber = ($1)`;
        const result = await db.query(carDetailsQuery, [registerNumber]);

        if (result.rowCount === 0) {
            return res.status(404).send({ message: "Car details not found for the given registration number" });
        }

        // Query car insurance details
        const carInsuranceQuery = `SELECT * FROM carinsurance WHERE registernumber = $1`;
        const result1 = await db.query(carInsuranceQuery, [registerNumber]);

        if (result1.rowCount === 0) {
            return res.status(404).send({ message: "Car insurance details not found for the given registration number" });
        }

        // Query customer details (who bought the car)
        const customerDetailsQuery = `SELECT * FROM soldcardetails WHERE registernumber = $1`;
        const result2 = await db.query(customerDetailsQuery, [registerNumber]);

        if (result2.rowCount === 0) {
            return res.status(404).send({ message: "Customer details not found for the given registration number" });
        }

        const ownerDetailsQuery = `SELECT * FROM ownerdetails WHERE registernumber = $1`;
        const result3 = await db.query(ownerDetailsQuery, [registerNumber]);

        if (result3.rowCount === 0) {
            return res.status(404).send({ message: "Owner details not found for the given registration number" });
        }

        // Extract data from queries
        const carDetails = result.rows[0];
        const carinsurance = result1.rows[0];
        const customerDetails = result2.rows[0];
        const ownerDetails = result3.rows[0];
        console.log("carDetails: ", carDetails);
        console.log("carinsurance: ", carinsurance);
        console.log("customerDetails: ", customerDetails);
        console.log("OwnerDetails: ", ownerDetails);

        // Inline Handlebars template as a string
        const templateContent = `
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Customer Bill</title>
            <style>
                body { font-family: 'Arial', sans-serif; margin: 0; padding: 0; background-color: #f8f9fa; }
                .container { width: 95%; max-width: 800px; margin: 30px auto; padding: 20px; background: #fff; border: 1px solid #ddd; border-radius: 10px; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }
                .header { text-align: center; margin-bottom: 20px; }
                .header h1 { font-size: 28px; color: #333; }
                .header p { font-size: 16px; color: #555; margin: 0; }
                .details-table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }
                .details-table th, .details-table td { text-align: left; padding: 10px; border: 1px solid #ddd; }
                .details-table th { background-color: #f4f4f4; color: #333; }
                .section-title { font-size: 16px; font-weight: bold; margin-top: 20px; color: #4CAF50; border-bottom: 2px solid #4CAF50; padding-bottom: 5px; }
                .footer { text-align: right; font-size: 16px; font-weight: bold; margin-top: 20px; }
                .sign-section { margin-top: 10px; }
                .sign-row { display: flex; justify-content: space-between; flex-wrap: nowrap; margin-bottom: 20px; }
                .sign-row div { flex: 1; margin: 0 10px; }
                .sign-field { border: 1px solid #ddd; padding: 10px; text-align: center; font-size: 12px; background-color: #f9f9f9; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>Customer Bill</h1>
                    <p>Generated by Nikhil Motors</p>
                </div>
                <div class="section-title">Vehicle Details</div>
                <table class="details-table">
                    <tr><th>Registration Number</th><td>{{carDetails.registernumber}}</td></tr>
                    <tr><th>Vehicle Name</th><td>{{carDetails.carname}}</td></tr>
                    <tr><th>Type</th><td>{{carDetails.carmake}}</td></tr>
                    <tr><th>Company</th><td>{{carDetails.carcompany}}</td></tr>
                    <tr><th>Color</th><td>{{carDetails.carcolor}}</td></tr>
                    <tr><th>Fuel Type</th><td>{{carDetails.fuel}}</td></tr>
                    <tr><th>Sell Price</th><td>₹{{carDetails.vehiclesellprice}}</td></tr>
                </table>
                <div class="section-title">Customer Details</div>
                <table class="details-table">
                    <tr><th>Owner Name</th><td>{{customerDetails.owner_name}}</td></tr>
                    <tr><th>Contact Number</th><td>{{customerDetails.contact_no}}</td></tr>
                    <tr><th>Down Payment</th><td>₹{{customerDetails.down_payment}}</td></tr>
                    <tr><th>Commission</th><td>₹{{customerDetails.commission}}</td></tr>
                </table>
                <div class="section-title">Owner Details</div>
                <table class="details-table">
                    <tr><th>Owner Name</th><td>{{ownerDetails.ownername}}</td></tr>
                    <tr><th>Contact Number</th><td>{{ownerDetails.ownerphone}}</td></tr>
                    <tr><th>Email</th><td>{{ownerDetails.owneremail}}</td></tr>
                    <tr><th>Address</th><td>{{ownerDetails.owneraddress}}</td></tr>
                </table>
                <div class="sign-section">
                    <div class="section-title">Additional Details</div>
                    <div>Date of Handover: ___________________________</div>
                    <div class="sign-row">
                        <div><div class="sign-field">Witness 1</div><div class="sign-field">Signature: ______________________</div></div>
                        <div><div class="sign-field">Witness 2</div><div class="sign-field">Signature: ______________________</div></div>
                    </div>
                    <div class="sign-row">
                        <div><div class="sign-field">Car Buyer</div><div class="sign-field">Signature: ______________________</div></div>
                        <div><div class="sign-field">Car Seller</div><div class="sign-field">Signature: ______________________</div></div>
                    </div>
                </div>
            </div>
        </body>
        </html>`;

        // Compile the template using Handlebars
        const compiledTemplate = handlebars.compile(templateContent);

        // Generate HTML with data
        const html = compiledTemplate({ carDetails, carinsurance, customerDetails, ownerDetails });

        // PDF options
        const options = { format: 'A4', orientation: 'portrait' };

        // Generate PDF buffer (in memory)
        pdf.create(html, options).toBuffer((err, buffer) => {
            if (err) {
                console.error('Error generating PDF:', err);
                return res.status(500).send({ message: "Error generating PDF" });
            }

            // Set headers to force download
            res.setHeader('Content-Disposition', `attachment; filename=${registerNumber}_bill.pdf`);
            res.setHeader('Content-Type', 'application/pdf');
            res.setHeader('Content-Length', buffer.length);

            // Send the buffer as the response (this will trigger a download)
            res.send(buffer);
        });
    } catch (error) {
        console.error(error);
        res.status(500).send({ message: "Internal Server Error" });
    }
}

module.exports = { generateBill };
